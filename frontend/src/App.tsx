// Componenta principalÄƒ a aplicaÈ›iei - orchestrator pentru rutare Ã®ntre pagini
import React, { useEffect } from 'react';
import { Routes, Route, Navigate } from 'react-router-dom'; // Importuri react-router-dom

import TransactionsPage from './pages/TransactionsPage';
import LunarGridPage from './pages/LunarGridPage';
import OptionsPage from './pages/OptionsPage';
import LoginForm from './components/features/Auth/LoginForm';
import RegisterForm from './components/features/Auth/RegisterForm';
import { Toaster } from 'react-hot-toast';
import Spinner from './components/primitives/Spinner';
import NavLink from './components/primitives/NavLink';
import { TITLES } from '@shared-constants';
import { getEnhancedComponentClasses } from './styles/themeUtils';

// Import store Zustand pentru autentificare
import { useAuthStore } from './stores/authStore';

/**
 * Componenta principalÄƒ a aplicaÈ›iei, refactorizatÄƒ pentru a utiliza custom hooks È™i servicii
 * 
 * Structura:
 * 
 * AceastÄƒ structurÄƒ separÄƒ clar logica de business de UI, crescÃ¢nd testabilitatea, 
 * mentenabilitatea È™i facilitÃ¢nd extinderea ulterioarÄƒ.
 */
export const App: React.FC = () => {
  console.log('ğŸ”œ App render using react-router-dom');
  
  const { user, loading, checkUser } = useAuthStore();

  useEffect(() => {
    checkUser();
  }, [checkUser]);
  
  // AfiÈ™eazÄƒ spinner Ã®n timpul Ã®ncÄƒrcÄƒrii stÄƒrii de autentificare
  if (loading) {
    return (
      <div className={getEnhancedComponentClasses('container', 'primary', undefined, 'loading', ['centered', 'fixed'])}>
        <Spinner sizeVariant="xl" />
      </div>
    );
  }

  // Rute protejate È™i publice
  // DacÄƒ utilizatorul nu este autentificat, È™i Ã®ncearcÄƒ sÄƒ acceseze o rutÄƒ protejatÄƒ, va fi redirecÈ›ionat
  // la /login. Pagina de login va fi ruta implicitÄƒ dacÄƒ nu e logat.

  return (
    <>
      <Toaster position="top-right" toastOptions={{ duration: 3500 }} />
      <div className={getEnhancedComponentClasses('container', 'primary', 'lg')}>
        {user && ( /* AfiÈ™eazÄƒ navigarea doar dacÄƒ utilizatorul este logat */ 
          <div className={getEnhancedComponentClasses('navbar-container', 'primary') + ' mb-6'}>
            <NavLink to="/transactions" testId="transactions-tab">
              {TITLES.TRANZACTII}
            </NavLink>
            <NavLink to="/lunar-grid" testId="lunar-grid-tab">
              {TITLES.GRID_LUNAR}
            </NavLink>
            <NavLink to="/options" testId="options-tab">
              {TITLES.OPTIUNI || 'OpÈ›iuni'}
            </NavLink>
          </div>
        )}
        
        <Routes>
          {user ? (
            <>
              <Route path="/" element={<Navigate to="/transactions" replace />} />
              <Route path="/transactions" element={<TransactionsPage />} />
              <Route path="/lunar-grid" element={<LunarGridPage />} />
              <Route path="/options" element={<OptionsPage />} />
              {/* Orice altÄƒ rutÄƒ pentru utilizator logat, redirecÈ›ioneazÄƒ la tranzacÈ›ii */}
              <Route path="*" element={<Navigate to="/transactions" replace />} />
            </>
          ) : (
            <>
              {/* Rute publice pentru login È™i register */}
              <Route path="/login" element={<LoginForm />} /> {/* Simplificat: LoginForm va avea link cÄƒtre /register */}
              <Route path="/register" element={<RegisterForm />} /> {/* Simplificat: RegisterForm va avea link cÄƒtre /login */}
              {/* Orice altÄƒ rutÄƒ, inclusiv rÄƒdÄƒcina, redirecÈ›ioneazÄƒ la login dacÄƒ nu e logat */}
              <Route path="*" element={<Navigate to="/login" replace />} />
            </>
          )}
        </Routes>
      </div>
    </>
  );
};

export default App;
